" Init Vundle {
"==
    set nocompatible
    filetype off

    set rtp+=~/.vim/bundle/vundle/
    call vundle#rc()
    Bundle 'gmarik/vundle'
" }

" My bundles {
"==
    Bundle 'altercation/vim-colors-solarized.git'
    Bundle 'scrooloose/nerdtree'
    Bundle 'kevinw/pyflakes-vim.git'
    Bundle 'Lokaltog/powerline'
    Bundle 'tpope/vim-fugitive.git'
    Bundle 'kien/ctrlp.vim'
    Bundle 'kchmck/vim-coffee-script'

    "Snip Mate and its dependencies
    Bundle "MarcWeber/vim-addon-mw-utils"
    Bundle "tomtom/tlib_vim"
    Bundle "garbas/vim-snipmate"
" }

" End Vundle Settings {
"==
    set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim/
    filetype plugin indent on " end vundle settings
" }

" Visual settings {
"==
    syntax enable
    set background=dark
    colorscheme solarized
    let g:solarized_termtrans=1
    let g:solarized_termcolors=256
    let g:solarized_contrast="high"
    let g:solarized_visibility="high"

    " disable blinking cursor
    set gcr=a:blinkon0

    set guifont=Inconsolata\ 13
    set encoding=utf-8
    set autoindent
    set number
    set nowrap

    " tab settings
    set tabstop=4
    set shiftwidth=4
    set softtabstop=4
    set expandtab

    "" show status all the time
    set laststatus=2

    " highlight search terms, cancel on Ctrl-l
    set hlsearch
    noremap <c-s> :nohl<CR>

    " Highlight extra whitespace at the end of lines
    highlight ExtraWhitespace ctermbg=red guibg=red
    au ColorScheme * highlight ExtraWhitespace guibg=red
    au BufEnter * match ExtraWhitespace /\s\+$/
    au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
    au InsertLeave * match ExtraWhiteSpace /\s\+$/

    " Show tab and newline chars and set their color
    " hide listings in terminal vim, does not support so many colors
    set nolist
    set listchars=tab:▸\ ,eol:¬
    highlight NonText guifg=#113d47
    highlight SpecialKey guifg=#113d47
" }

" Helper mappings{
    command WQ wq
    command Wq wq
    command W w
    command Q q

    " use ; as leader
    let mapleader=";"

    " ctrl-c/ctrl-v use system clipboard (LINUX)
    noremap <C-c> "+y
    noremap <C-q> "+p

    " Nerd tree toggle
    map <Leader>nt :NERDTreeToggle<CR>

    " Navigate between splits easily
    nmap <silent> <c-k> :wincmd k<CR>
    nmap <silent> <c-j> :wincmd j<CR>
    nmap <silent> <c-h> :wincmd h<CR>
    nmap <silent> <c-l> :wincmd l<CR>

    " Navigate buffers with Ctrl + [Shift] + tab
    map <C-S-tab> :bprevious<CR>
    map <C-tab> :bnext<CR>

    " Ctrl P map
    let g:ctrlp_map = '<c-p>'

    " toggle show whitespace chars
    nmap <leader>l :set list!<CR>

    " Shortcuts to open some somefiles
    map <leader>rc :e `=resolve(expand("~/.vimrc"))`<CR>
    map <leader>snip :e ~/.vim/snippets<CR>
" }

" Helper functions {
"==
    " use ;h/;j to enable/disable fast scroll
    function MultiScroll(OnOff)
    if a:OnOff == 1
      noremap j 5j
      noremap k 5k
    else
      noremap j j
      noremap k k
    endif
    endfunction

    map <leader>j :call MultiScroll(1)<RETURN>
    map <leader>k :call MultiScroll(0)<RETURN>
" }

" Gvim settings {
"==
    if has('gui_running')
        set guioptions=aegimt
        set lines=36
        set columns=80

        set list

        " Move gVIM window to left/right
        command WL winpos 71 49
        command WR winpos 631 49
    endif
" }
